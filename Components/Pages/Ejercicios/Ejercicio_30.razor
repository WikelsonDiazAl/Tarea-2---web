@page "/Ejercicio_30"
@rendermode InteractiveServer
@inject NavigationManager Navigation

<h3>Posición del mayor número primo en un vector de 10 números</h3>

<div class="form-group">
    <label for="numeros">Introduce 10 números separados por comas</label>
    <input type="text" class="form-control" id="numeros" @bind="numerosTexto" placeholder="Ejemplo: 1,2,3,4,5,6,7,8,9,10" />
</div>

<div class="form-group">
    <button class="btn btn-primary" @onclick="PosicionMayorPrimo">Encontrar Posición del Mayor Primo</button>
</div>

@if (posicionMayorPrimo.HasValue)
{
    <p>La posición del mayor número primo es: @posicionMayorPrimo</p>
}
else if (noPrimos)
{
    <p>No hay números primos en el vector.</p>
}

<button class="btn btn-secondary" @onclick="Regresar">Regresar</button>

@code {
    private string numerosTexto;
    private int? posicionMayorPrimo = null;
    private bool noPrimos = false;

    private void PosicionMayorPrimo()
    {
        int[] numeros = numerosTexto.Split(',').Select(int.Parse).ToArray();
        if (numeros.Length == 10)
        {
            int mayorPrimo = -1;
            posicionMayorPrimo = null;
            noPrimos = false;

            for (int i = 0; i < numeros.Length; i++)
            {
                if (EsPrimo(numeros[i]) && numeros[i] > mayorPrimo)
                {
                    mayorPrimo = numeros[i];
                    posicionMayorPrimo = i;
                }
            }

            if (posicionMayorPrimo == null)
            {
                noPrimos = true;
            }
        }
        else
        {
            posicionMayorPrimo = null;
            noPrimos = false;
        }
    }

    private bool EsPrimo(int numero)
    {
        if (numero < 2) return false;
        for (int i = 2; i <= Math.Sqrt(numero); i++)
        {
            if (numero % i == 0) return false;
        }
        return true;
    }

    private void Regresar() {
        Navigation.NavigateTo("/");
    }
}
